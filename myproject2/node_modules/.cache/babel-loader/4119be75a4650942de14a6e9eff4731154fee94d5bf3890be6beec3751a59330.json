{"ast":null,"code":"import router from \"@/router\";\nexport default {\n  name: \"clientOrderSearch\",\n  mounted() {\n    var documentWidth = $(document).width();\n    layui.use(['table', 'form'], function () {\n      var table = layui.table;\n      table.render({\n        elem: '#test' //绑定table表格\n        ,\n        id: 'csInfo',\n        method: 'get',\n        response: {\n          \"code\": 200,\n          \"msg\": \"\",\n          \"count\": 0,\n          \"data\": [{}, {}]\n        },\n        url: '/api/Sys/v1/orders/ceid/' + router.currentRoute.query.id //后台springmvc接收路径\n        // ,url: 'http://localhost:8080/Sys/v1/orders/ceid/' + router.currentRoute.query.id//后台springmvc接收路径\n        ,\n        page: {\n          //支持传入 laypage 组件的所有参数（某些参数除外，如：jump/elem） - 详见文档\n          layout: ['limit', 'count', 'prev', 'page', 'next', 'skip'] //自定义分页布局\n          //,curr: 5 //设定初始在第 5 页\n          ,\n          groups: 1 //只显示 1 个连续页码\n          ,\n          first: false //不显示首页\n          ,\n          last: false //不显示尾页\n          ,\n          limit: 10,\n          limits: [5, 10, 20, 30]\n        },\n        cols: [[{\n          type: 'checkbox',\n          width: documentWidth * 4 / 100,\n          fixed: 'left'\n        }, {\n          field: 'oid',\n          title: '订单ID',\n          sort: true,\n          width: 100,\n          fixed: 'left'\n        }, {\n          field: 'senderName',\n          title: '发件⼈名',\n          sort: true,\n          width: 150\n        }, {\n          field: 'senderPhone',\n          title: '发件⼈电话',\n          sort: true,\n          width: 150\n        }, {\n          field: 'departure',\n          title: '发件地址',\n          sort: true,\n          width: 150\n        }, {\n          field: 'receiveName',\n          title: '收件⼈名',\n          sort: true,\n          width: 150\n        }, {\n          field: 'receivePhone',\n          title: '收件⼈电话',\n          sort: true,\n          width: 150\n        }, {\n          field: 'destination',\n          title: '收件地址',\n          sort: true,\n          width: 150\n        }, {\n          field: 'cargoType',\n          title: '货物种类',\n          sort: true,\n          width: 150\n        }, {\n          field: 'weight',\n          title: '货物重量',\n          sort: true,\n          width: 150\n        }, {\n          field: 'volume',\n          title: '货物体积',\n          sort: true,\n          width: 150\n        }, {\n          field: 'cost',\n          title: '运费',\n          sort: true,\n          width: 150\n        }, {\n          field: 'state',\n          title: '状态',\n          sort: true,\n          width: 150\n        }, {\n          field: 'submitTime',\n          title: '提交订单时间',\n          sort: true,\n          width: 150\n        }, {\n          field: 'sendTime',\n          title: '发货时间',\n          sort: true,\n          width: 150\n        }, {\n          field: 'receiveTime',\n          title: '到达时间',\n          sort: true,\n          width: 150\n        }, {\n          title: '操作',\n          align: 'center',\n          toolbar: '#barDemo',\n          fixed: 'right',\n          width: 100\n        }]]\n      });\n\n      //工具条事件\n      table.on('tool(test)', function (obj) {\n        //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter=\"对应的值\"\n        const data = obj.data; //获得当前行数据\n        const layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）\n        const tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）\n\n        const oid = data.oid;\n        if (layEvent === 'findLogistic') {\n          //  查看物流信息\n\n          layer.open({\n            type: 2,\n            title: '物流信息（oid：' + oid + ')',\n            skin: 'layui-layer-molv',\n            shadeClose: true,\n            shade: 0.8,\n            area: ['400px', '500px'],\n            content: 'logisticsInfo?oid=' + oid\n          });\n        }\n      }); //工具条事件\n\n      $('.layui-btn').on('click', function () {\n        var type = $(this).data('type');\n        active[type] ? active[type].call(this) : '';\n      });\n    });\n  },\n  methods: {\n    // goBack:function() {\n    //     let query = router.currentRoute.query\n    //     console.log(query)\n    //     router.push({path:\"/clientIndex\",query:query})\n    //\n    // }\n  }\n};","map":{"version":3,"names":["router","name","mounted","documentWidth","$","document","width","layui","use","table","render","elem","id","method","response","url","currentRoute","query","page","layout","groups","first","last","limit","limits","cols","type","fixed","field","title","sort","align","toolbar","on","obj","data","layEvent","event","tr","oid","layer","open","skin","shadeClose","shade","area","content","active","call","methods"],"sources":["src/components/client/clientOrderSearch.vue"],"sourcesContent":["<template>\r\n    <div style=\"height:586px; overflow:auto\">\r\n    <div class=\"x-nav\">\r\n        <a class=\"layui-btn layui-btn-small\" style=\"line-height:1.6em;margin-top:3px;float:right\" href=\"javascript:location.replace(location.href);\" title=\"刷新\">\r\n            <i class=\"layui-icon\" style=\"line-height:30px\">ဂ</i></a>\r\n\r\n<!--        <el-button type=\"primary\" @click=\"goBack\" style=\"margin-left: 10px;\">返回</el-button>-->\r\n    </div>\r\n\r\n\r\n\r\n    <table id=\"test\" lay-filter=\"test\">\r\n        <script  type=\"text/html\" id =\"barDemo\">\r\n\r\n            <a class=\"layui-btn layui-btn-xs\"   lay-event=\"findLogistic\"  v-if=\"state ==='物流'\">查看物流</a>\r\n        </script>\r\n    </table>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import router from \"@/router\";\r\n    export default {\r\n        name: \"clientOrderSearch\",\r\n        mounted() {\r\n            var documentWidth = $(document).width();\r\n            layui.use(['table','form'],function(){\r\n                var table = layui.table;\r\n                table.render({\r\n                    elem: '#test'  //绑定table表格\r\n                    ,id:'csInfo'\r\n                    ,method:'get',\r\n                        response: {\r\n                            \"code\": 200,\r\n                            \"msg\": \"\",\r\n                            \"count\": 0,\r\n                            \"data\": [{} ,{}]\r\n                        }\r\n                    ,url: '/api/Sys/v1/orders/ceid/' + router.currentRoute.query.id//后台springmvc接收路径\r\n                    // ,url: 'http://localhost:8080/Sys/v1/orders/ceid/' + router.currentRoute.query.id//后台springmvc接收路径\r\n                    ,page: { //支持传入 laypage 组件的所有参数（某些参数除外，如：jump/elem） - 详见文档\r\n                        layout: ['limit', 'count', 'prev', 'page', 'next', 'skip'] //自定义分页布局\r\n                        //,curr: 5 //设定初始在第 5 页\r\n                        ,groups: 1 //只显示 1 个连续页码\r\n                        ,first: false //不显示首页\r\n                        ,last: false //不显示尾页\r\n                        ,limit:10\r\n                        ,limits:[5,10,20,30]\r\n                    },\r\n\r\n                    cols: [\r\n                        [\r\n                            {type: 'checkbox',width:documentWidth*4/100,fixed: 'left',}\r\n                            ,{field:'oid',title:'订单ID', sort: true,width: 100,fixed: 'left',}\r\n                            ,{field:'senderName',title:'发件⼈名', sort:true,width: 150}\r\n                            ,{field:'senderPhone',title:'发件⼈电话',sort:true,width: 150}\r\n                            ,{field:'departure',title:'发件地址',sort:true,width: 150}\r\n                            ,{field:'receiveName',title:'收件⼈名',sort:true,width: 150}\r\n                            ,{field:'receivePhone',title:'收件⼈电话',sort:true,width: 150}\r\n                            ,{field:'destination',title:'收件地址',sort:true,width: 150}\r\n                            ,{field:'cargoType',title:'货物种类',sort:true,width: 150}\r\n                            ,{field:'weight',title:'货物重量',sort:true,width: 150}\r\n                            ,{field:'volume',title:'货物体积',sort:true,width: 150}\r\n                            ,{field:'cost',title:'运费',sort:true,width: 150}\r\n                            ,{field:'state',title:'状态',sort:true,width: 150}\r\n                            ,{field:'submitTime',title:'提交订单时间',sort:true,width: 150}\r\n                            ,{field:'sendTime',title:'发货时间',sort:true,width: 150}\r\n                            ,{field:'receiveTime',title:'到达时间',sort:true,width: 150}\r\n                            ,{ title:'操作', align:'center', toolbar: '#barDemo',fixed: 'right',width: 100}\r\n\r\n                        ]\r\n                    ]\r\n\r\n                });\r\n\r\n                //工具条事件\r\n                table.on('tool(test)', function(obj){ //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter=\"对应的值\"\r\n                    const data = obj.data; //获得当前行数据\r\n                    const layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）\r\n                    const tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）\r\n\r\n                    const oid =  data.oid\r\n\r\n                    if (layEvent === 'findLogistic'){//  查看物流信息\r\n\r\n                        layer.open({\r\n                            type: 2,\r\n                            title: '物流信息（oid：'+oid+')',\r\n                            skin: 'layui-layer-molv',\r\n                            shadeClose: true,\r\n                            shade: 0.8,\r\n                            area:  ['400px', '500px'],\r\n                            content: 'logisticsInfo?oid='+oid,\r\n\r\n                        });\r\n\r\n\r\n                    }\r\n\r\n\r\n                });//工具条事件\r\n\r\n\r\n\r\n                $('.layui-btn').on('click', function(){\r\n                    var type = $(this).data('type');\r\n                    active[type] ? active[type].call(this) : '';\r\n                });\r\n            });\r\n\r\n        },\r\n        methods:{\r\n            // goBack:function() {\r\n            //     let query = router.currentRoute.query\r\n            //     console.log(query)\r\n            //     router.push({path:\"/clientIndex\",query:query})\r\n            //\r\n            // }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAsBA,OAAAA,MAAA;AACA;EACAC,IAAA;EACAC,QAAA;IACA,IAAAC,aAAA,GAAAC,CAAA,CAAAC,QAAA,EAAAC,KAAA;IACAC,KAAA,CAAAC,GAAA;MACA,IAAAC,KAAA,GAAAF,KAAA,CAAAE,KAAA;MACAA,KAAA,CAAAC,MAAA;QACAC,IAAA;QAAA;QACAC,EAAA;QACAC,MAAA;QACAC,QAAA;UACA;UACA;UACA;UACA;QACA;QACAC,GAAA,+BAAAf,MAAA,CAAAgB,YAAA,CAAAC,KAAA,CAAAL,EAAA;QACA;QAAA;QACAM,IAAA;UAAA;UACAC,MAAA;UACA;UAAA;UACAC,MAAA;UAAA;UACAC,KAAA;UAAA;UACAC,IAAA;UAAA;UACAC,KAAA;UACAC,MAAA;QACA;QAEAC,IAAA,GACA,CACA;UAAAC,IAAA;UAAApB,KAAA,EAAAH,aAAA;UAAAwB,KAAA;QAAA,GACA;UAAAC,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;UAAAqB,KAAA;QAAA,GACA;UAAAC,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAsB,KAAA;UAAAC,KAAA;UAAAC,IAAA;UAAAxB,KAAA;QAAA,GACA;UAAAuB,KAAA;UAAAE,KAAA;UAAAC,OAAA;UAAAL,KAAA;UAAArB,KAAA;QAAA,EAEA;MAGA;;MAEA;MACAG,KAAA,CAAAwB,EAAA,yBAAAC,GAAA;QAAA;QACA,MAAAC,IAAA,GAAAD,GAAA,CAAAC,IAAA;QACA,MAAAC,QAAA,GAAAF,GAAA,CAAAG,KAAA;QACA,MAAAC,EAAA,GAAAJ,GAAA,CAAAI,EAAA;;QAEA,MAAAC,GAAA,GAAAJ,IAAA,CAAAI,GAAA;QAEA,IAAAH,QAAA;UAAA;;UAEAI,KAAA,CAAAC,IAAA;YACAf,IAAA;YACAG,KAAA,gBAAAU,GAAA;YACAG,IAAA;YACAC,UAAA;YACAC,KAAA;YACAC,IAAA;YACAC,OAAA,yBAAAP;UAEA;QAGA;MAGA;;MAIAnC,CAAA,eAAA6B,EAAA;QACA,IAAAP,IAAA,GAAAtB,CAAA,OAAA+B,IAAA;QACAY,MAAA,CAAArB,IAAA,IAAAqB,MAAA,CAAArB,IAAA,EAAAsB,IAAA;MACA;IACA;EAEA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
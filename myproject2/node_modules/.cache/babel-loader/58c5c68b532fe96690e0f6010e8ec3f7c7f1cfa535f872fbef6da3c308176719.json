{"ast":null,"code":"import request from \"@/network/request\";\nimport router from \"../../router\";\nexport default {\n  name: \"incomeBar\",\n  mounted() {\n    //获取路由上的信息\n    let query = router.currentRoute.query;\n    let year = '2023';\n    const chart = document.getElementById('main');\n    const echart = this.$echarts.init(chart);\n    function buildChart(columName, columnValue) {\n      var option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        legend: {\n          data: [year + \"年月收入\"]\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          length: 12,\n          axisTick: {\n            alignWithLabel: true,\n            interval: '0'\n          },\n          axisLabel: {\n            show: true\n          },\n          min: 0,\n          type: 'category',\n          data: columName\n        }],\n        yAxis: [{\n          min: 0,\n          type: 'value'\n        }],\n        series: [{\n          name: year + \"年月收入\",\n          type: 'bar',\n          data: columnValue,\n          itemStyle: {\n            normal: {\n              label: {\n                show: true,\n                position: 'top'\n              }\n            }\n          }\n        }]\n        // series : columnValue\n        // itemStyle: {\n        // \tnormal: {\n        // \t\tlabel: {\n        // \t\t\tshow: true,\n        // \t\t\tposition: 'top'\n        // \t\t}\n        // \t}\n        // }\n        // }\n      };\n\n      echart.setOption(option, true);\n    }\n    layui.use(['table'], function () {\n      // var form = layui.form;\n      // const laydate = layui.laydate;\n\n      //根据名称查询\n      const $ = layui.$,\n        active = {\n          reload: function () {\n            year = $('#demoReload').val().toString();\n            let data = {\n              account: query.id,\n              year: year\n            };\n            let account = query.id;\n            console.log(JSON.stringify({\n              account: query.id,\n              year: year\n            }));\n\n            // request({\n            //     methods: get,\n            //     url:\"/api/Sys/v1/incomes\",\n            //     params:data\n            // })\n            // request.get(\n            request.post(\"/api/Sys/v1/incomes\", data).then(res => {\n              console.log(res);\n              var columName = ['一月', '二月', '三月', \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"];\n              const columnValue = res.data;\n              buildChart(columName, columnValue);\n            }).catch(e => {\n              console.log(e);\n              alert(\"图表请求数据失败!\");\n              echart.hideLoading();\n            });\n\n            // $.ajax({\n            //     type: \"get\",\n            //     async: true, //异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）\n            //     url: \"getGscomp\", //请求发送到TestServlet处\n            //     data: {\n            //         \"year\": year,\n            //\n            //     },\n            //     dataType: \"json\", //返回数据形式为json\n            //     success: function (result) {\n            //\n            //         var columName = ['一月', '二月', '三月', \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"];\n            //         // var columnValue = new Array();\n            //         const columnValue = result;\n            //\n            //\n            //         buildChart(columName, columnValue);\n            //\n            //     },\n            //     error: function (errorMsg) {\n            //         //请求失败时执行该函数\n            //         alert(\"图表请求数据失败!\");\n            //         echart.hideLoading();\n            //     }\n            // });\n          }\n        };\n\n      $('.demoTable .layui-btn').on('click', function () {\n        var type = $(this).data('type');\n        active[type] ? active[type].call(this) : '';\n      });\n    });\n  },\n  //mounted\n  methods: {}\n};","map":{"version":3,"names":["request","router","name","mounted","query","currentRoute","year","chart","document","getElementById","echart","$echarts","init","buildChart","columName","columnValue","option","tooltip","trigger","axisPointer","type","toolbox","show","feature","saveAsImage","legend","data","grid","left","right","bottom","containLabel","xAxis","length","axisTick","alignWithLabel","interval","axisLabel","min","yAxis","series","itemStyle","normal","label","position","setOption","layui","use","$","active","reload","val","toString","account","id","console","log","JSON","stringify","post","then","res","catch","e","alert","hideLoading","on","call","methods"],"sources":["src/components/company/incomeBar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n    <div class=\"x-nav\">\r\n        <a class=\"layui-btn layui-btn-small\"\r\n           style=\"line-height: 1.6em; margin-top: 3px; float: right\"\r\n           href=\"javascript:location.replace(location.href);\" title=\"刷新\"> <i\r\n                class=\"layui-icon\" style=\"line-height: 30px\">ဂ</i>\r\n        </a>\r\n    </div>\r\n\r\n    <div class=\"x-body\">\r\n        <div class=\"layui-row\">\r\n\r\n\r\n\r\n            <div class=\"layui-form-item\">\r\n\r\n\r\n                <div class=\"demoTable\" style=\"margin-bottom: 20px\">\r\n                    年份：\r\n                    <div class=\"layui-inline\">\r\n                        <input class=\"layui-input\" name=\"id\" id=\"demoReload\" autocomplete=\"off\">\r\n                    </div>\r\n                    <button class=\"layui-btn\" data-type=\"reload\" ><i class=\"layui-icon\">&#xe615;</i></button>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <table id=\"test\" lay-filter=\"test\"></table>\r\n        </div>\r\n\r\n        <!--条形图-->\r\n        <div id=\"main\" style=\"width: 600px; height: 400px;\"></div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/network/request\";\r\n    import router from \"../../router\"\r\n\r\n    export default {\r\n        name: \"incomeBar\",\r\n        mounted() {\r\n            //获取路由上的信息\r\n            let query = router.currentRoute.query\r\n\r\n            let year = '2023';\r\n\r\n            const chart = document.getElementById('main');\r\n\r\n            const echart = this.$echarts.init(chart);\r\n\r\n            function buildChart(columName, columnValue) {\r\n                var option = {\r\n                    tooltip : {\r\n                        trigger : 'axis',\r\n                        axisPointer : {\r\n                            type : 'shadow'\r\n                        }\r\n                    },\r\n                    toolbox : {\r\n                        show : true,\r\n                        feature : {\r\n                            saveAsImage : {\r\n                                show : true\r\n                            }\r\n                        }\r\n                    },\r\n                    legend : {\r\n                        data : [year+\"年月收入\"]\r\n                    },\r\n                    grid : {\r\n                        left : '3%',\r\n                        right : '4%',\r\n                        bottom : '3%',\r\n                        containLabel : true\r\n                    },\r\n                    xAxis : [ {\r\n                        length: 12,\r\n                        axisTick: {\r\n                            alignWithLabel: true,\r\n                            interval :'0'\r\n                        },\r\n                        axisLabel:{\r\n                            show : true\r\n                        },\r\n                        min : 0,\r\n                        type : 'category',\r\n                        data : columName\r\n                    } ],\r\n                    yAxis : [ {\r\n                        min : 0,\r\n                        type : 'value'\r\n                    } ],\r\n                    series: [{\r\n                        name: year+\"年月收入\",\r\n                        type: 'bar',\r\n                        data: columnValue,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                label: {\r\n                                    show: true,\r\n                                    position: 'top'\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    }]\r\n                    // series : columnValue\r\n                    // itemStyle: {\r\n                    // \tnormal: {\r\n                    // \t\tlabel: {\r\n                    // \t\t\tshow: true,\r\n                    // \t\t\tposition: 'top'\r\n                    // \t\t}\r\n                    // \t}\r\n                    // }\r\n                    // }\r\n                };\r\n\r\n                echart.setOption(option,true);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            layui.use([ 'table'], function() {\r\n                // var form = layui.form;\r\n                // const laydate = layui.laydate;\r\n\r\n\r\n\r\n\r\n\r\n                //根据名称查询\r\n                const $ = layui.$, active = {\r\n\r\n                    reload: function () {\r\n                        year = $('#demoReload').val().toString();\r\n                        let data={\r\n                            account:query.id,\r\n                            year:year,\r\n\r\n                        }\r\n                        let account = query.id\r\n\r\n                        console.log(JSON.stringify({\r\n                            account:query.id,\r\n                            year:year,\r\n\r\n                        }))\r\n\r\n\r\n                        // request({\r\n                        //     methods: get,\r\n                        //     url:\"/api/Sys/v1/incomes\",\r\n                        //     params:data\r\n                        // })\r\n                        // request.get(\r\n                        request.post(\r\n                            \"/api/Sys/v1/incomes\",\r\n                             data\r\n\r\n                        ).then(res=>{\r\n                            console.log(res);\r\n                            var columName = ['一月', '二月', '三月', \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"];\r\n                           const columnValue = res.data;\r\n                            buildChart(columName, columnValue);\r\n\r\n                        }).catch(e=>{\r\n                            console.log(e);\r\n                            alert(\"图表请求数据失败!\");\r\n                            echart.hideLoading();\r\n                        });\r\n\r\n                        // $.ajax({\r\n                        //     type: \"get\",\r\n                        //     async: true, //异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）\r\n                        //     url: \"getGscomp\", //请求发送到TestServlet处\r\n                        //     data: {\r\n                        //         \"year\": year,\r\n                        //\r\n                        //     },\r\n                        //     dataType: \"json\", //返回数据形式为json\r\n                        //     success: function (result) {\r\n                        //\r\n                        //         var columName = ['一月', '二月', '三月', \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"];\r\n                        //         // var columnValue = new Array();\r\n                        //         const columnValue = result;\r\n                        //\r\n                        //\r\n                        //         buildChart(columName, columnValue);\r\n                        //\r\n                        //     },\r\n                        //     error: function (errorMsg) {\r\n                        //         //请求失败时执行该函数\r\n                        //         alert(\"图表请求数据失败!\");\r\n                        //         echart.hideLoading();\r\n                        //     }\r\n                        // });\r\n\r\n                    }\r\n                };\r\n\r\n                $('.demoTable .layui-btn').on('click', function(){\r\n                    var type = $(this).data('type');\r\n                    active[type] ? active[type].call(this) : '';\r\n                });\r\n\r\n\r\n\r\n\r\n            });\r\n        },//mounted\r\n        methods:{\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA6CA,OAAAA,OAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACA;IACA,IAAAC,KAAA,GAAAH,MAAA,CAAAI,YAAA,CAAAD,KAAA;IAEA,IAAAE,IAAA;IAEA,MAAAC,KAAA,GAAAC,QAAA,CAAAC,cAAA;IAEA,MAAAC,MAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAL,KAAA;IAEA,SAAAM,WAAAC,SAAA,EAAAC,WAAA;MACA,IAAAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;UACA;QACA;QACAC,OAAA;UACAC,IAAA;UACAC,OAAA;YACAC,WAAA;cACAF,IAAA;YACA;UACA;QACA;QACAG,MAAA;UACAC,IAAA,GAAApB,IAAA;QACA;QACAqB,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,MAAA;UACAC,QAAA;YACAC,cAAA;YACAC,QAAA;UACA;UACAC,SAAA;YACAf,IAAA;UACA;UACAgB,GAAA;UACAlB,IAAA;UACAM,IAAA,EAAAZ;QACA;QACAyB,KAAA;UACAD,GAAA;UACAlB,IAAA;QACA;QACAoB,MAAA;UACAtC,IAAA,EAAAI,IAAA;UACAc,IAAA;UACAM,IAAA,EAAAX,WAAA;UACA0B,SAAA;YACAC,MAAA;cACAC,KAAA;gBACArB,IAAA;gBACAsB,QAAA;cACA;YACA;UACA;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;;MAEAlC,MAAA,CAAAmC,SAAA,CAAA7B,MAAA;IACA;IAOA8B,KAAA,CAAAC,GAAA;MACA;MACA;;MAMA;MACA,MAAAC,CAAA,GAAAF,KAAA,CAAAE,CAAA;QAAAC,MAAA;UAEAC,MAAA,WAAAA,CAAA;YACA5C,IAAA,GAAA0C,CAAA,gBAAAG,GAAA,GAAAC,QAAA;YACA,IAAA1B,IAAA;cACA2B,OAAA,EAAAjD,KAAA,CAAAkD,EAAA;cACAhD,IAAA,EAAAA;YAEA;YACA,IAAA+C,OAAA,GAAAjD,KAAA,CAAAkD,EAAA;YAEAC,OAAA,CAAAC,GAAA,CAAAC,IAAA,CAAAC,SAAA;cACAL,OAAA,EAAAjD,KAAA,CAAAkD,EAAA;cACAhD,IAAA,EAAAA;YAEA;;YAGA;YACA;YACA;YACA;YACA;YACA;YACAN,OAAA,CAAA2D,IAAA,CACA,uBACAjC,IAAA,CAEA,CAAAkC,IAAA,CAAAC,GAAA;cACAN,OAAA,CAAAC,GAAA,CAAAK,GAAA;cACA,IAAA/C,SAAA;cACA,MAAAC,WAAA,GAAA8C,GAAA,CAAAnC,IAAA;cACAb,UAAA,CAAAC,SAAA,EAAAC,WAAA;YAEA,GAAA+C,KAAA,CAAAC,CAAA;cACAR,OAAA,CAAAC,GAAA,CAAAO,CAAA;cACAC,KAAA;cACAtD,MAAA,CAAAuD,WAAA;YACA;;YAEA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;UAEA;QACA;;MAEAjB,CAAA,0BAAAkB,EAAA;QACA,IAAA9C,IAAA,GAAA4B,CAAA,OAAAtB,IAAA;QACAuB,MAAA,CAAA7B,IAAA,IAAA6B,MAAA,CAAA7B,IAAA,EAAA+C,IAAA;MACA;IAKA;EACA;EAAA;EACAC,OAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
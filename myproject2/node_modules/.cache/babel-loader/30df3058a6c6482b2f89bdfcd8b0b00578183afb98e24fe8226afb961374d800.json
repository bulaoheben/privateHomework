{"ast":null,"code":"import request from \"@/network/request\";\nimport router from \"@/router\";\n\n//取传入的路径上的参数\nfunction RequestParameter() {\n  var url = window.location.search; //获取url中\"?\"符后的字串\n  var theRequest = new Object();\n  if (url.indexOf(\"?\") != -1) {\n    var str = url.substr(1);\n    var strs = str.split(\"&\");\n    for (var i = 0; i < strs.length; i++) {\n      theRequest[strs[i].split(\"=\")[0]] = strs[i].split(\"=\")[1];\n    }\n  }\n  return theRequest;\n}\nexport default {\n  name: \"addLogistics\",\n  data() {\n    return {\n      logistics: {\n        location: \"\",\n        oid: \"\"\n      }\n    };\n  },\n  methods: {\n    addLogistics() {\n      //获取oid\n      this.logistics.oid = RequestParameter()[\"oid\"];\n      console.log(\"oid\", this.logistics.oid);\n\n      //向服务端发送指令\n      request.post('/api/Sys/v1/logistics', this.logistics).then(res => {\n        console.log(res);\n        if (res.msg === \"提交物流状态成功\") {\n          parent.layer.msg(res.msg, {\n            icon: 1,\n            time: 2000,\n            shade: 0.2\n          });\n          // window.location.reload(true);\n        }\n      }).catch(e => {\n        console.log(e);\n        parent.layer.msg('提交物流状态失败，请稍后尝试！', {\n          icon: 2,\n          time: 3000,\n          shade: 0.2\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","router","RequestParameter","url","window","location","search","theRequest","Object","indexOf","str","substr","strs","split","i","length","name","data","logistics","oid","methods","addLogistics","console","log","post","then","res","msg","parent","layer","icon","time","shade","catch","e"],"sources":["src/components/logistics/addLogistics.vue"],"sourcesContent":["<template>\r\n    <div style=\"padding: 30px\">\r\n        <!--     弹窗样式      -->\r\n<!--        <el-dialog title=\"新增物流信息\"  width=\"30%\">-->\r\n            <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n                <el-form-item label=\"物流信息\">\r\n                    <el-input v-model=\"logistics.location\" ></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"addLogistics\"  style=\"width: 30%;float: right\">确 定</el-button>\r\n               </span>\r\n<!--        </el-dialog>-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import request from \"@/network/request\";\r\n    import router from \"@/router\";\r\n\r\n    //取传入的路径上的参数\r\n    function RequestParameter(){\r\n        var url = window.location.search; //获取url中\"?\"符后的字串\r\n        var theRequest = new Object();\r\n        if (url.indexOf(\"?\") != -1) {\r\n            var str = url.substr(1);\r\n            var strs = str.split(\"&\");\r\n            for(var i = 0; i < strs.length; i ++) {\r\n                theRequest[strs[i].split(\"=\")[0]]=(strs[i].split(\"=\")[1]);\r\n            }\r\n        }\r\n        return theRequest\r\n    }\r\n\r\n\r\n    export default {\r\n        name: \"addLogistics\",\r\n        data(){\r\n            return{\r\n                logistics:{\r\n                    location:\"\",\r\n                    oid:\"\"\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        methods:{\r\n            addLogistics(){\r\n                //获取oid\r\n                this.logistics.oid = RequestParameter()[\"oid\"];\r\n                console.log(\"oid\",this.logistics.oid)\r\n\r\n                //向服务端发送指令\r\n                request.post(\r\n                    '/api/Sys/v1/logistics',\r\n                    this.logistics\r\n\r\n                ).then(res=>{\r\n                    console.log(res)\r\n\r\n                    if(res.msg===\"提交物流状态成功\") {\r\n\r\n                        parent.layer.msg(res.msg, {icon: 1, time: 2000, shade: 0.2});\r\n                        // window.location.reload(true);\r\n                    }\r\n                }).catch(e=>{\r\n                    console.log(e);\r\n                    parent.layer.msg('提交物流状态失败，请稍后尝试！', {icon: 2,time:3000,shade:0.2});\r\n                });\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAkBA,OAAAA,OAAA;AACA,OAAAC,MAAA;;AAEA;AACA,SAAAC,iBAAA;EACA,IAAAC,GAAA,GAAAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;EACA,IAAAC,UAAA,OAAAC,MAAA;EACA,IAAAL,GAAA,CAAAM,OAAA;IACA,IAAAC,GAAA,GAAAP,GAAA,CAAAQ,MAAA;IACA,IAAAC,IAAA,GAAAF,GAAA,CAAAG,KAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,GAAAF,IAAA,CAAAG,MAAA,EAAAD,CAAA;MACAP,UAAA,CAAAK,IAAA,CAAAE,CAAA,EAAAD,KAAA,YAAAD,IAAA,CAAAE,CAAA,EAAAD,KAAA;IACA;EACA;EACA,OAAAN,UAAA;AACA;AAGA;EACAS,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAb,QAAA;QACAc,GAAA;MACA;IAEA;EACA;EAEAC,OAAA;IACAC,aAAA;MACA;MACA,KAAAH,SAAA,CAAAC,GAAA,GAAAjB,gBAAA;MACAoB,OAAA,CAAAC,GAAA,aAAAL,SAAA,CAAAC,GAAA;;MAEA;MACAnB,OAAA,CAAAwB,IAAA,CACA,yBACA,KAAAN,SAAA,CAEA,CAAAO,IAAA,CAAAC,GAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAG,GAAA;QAEA,IAAAA,GAAA,CAAAC,GAAA;UAEAC,MAAA,CAAAC,KAAA,CAAAF,GAAA,CAAAD,GAAA,CAAAC,GAAA;YAAAG,IAAA;YAAAC,IAAA;YAAAC,KAAA;UAAA;UACA;QACA;MACA,GAAAC,KAAA,CAAAC,CAAA;QACAZ,OAAA,CAAAC,GAAA,CAAAW,CAAA;QACAN,MAAA,CAAAC,KAAA,CAAAF,GAAA;UAAAG,IAAA;UAAAC,IAAA;UAAAC,KAAA;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}